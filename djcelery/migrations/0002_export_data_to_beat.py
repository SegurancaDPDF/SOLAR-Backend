# Generated by Django 3.1.6 on 2021-02-15 23:37

from django.db import migrations
from django.conf import settings 

def migrate_data(apps, schema_editor):
    print("\nExportado dados do DjCelery para o Celery Beat...")

    # IntervalSchedule
    DjCeleryIntervalSchedule = apps.get_model("djcelery", "DjCeleryIntervalSchedule")
    IntervalSchedule = apps.get_model("django_celery_beat", "IntervalSchedule")
    
    for item in DjCeleryIntervalSchedule.objects.order_by('id'):
        obj, novo = IntervalSchedule.objects.get_or_create(
            id=item.id,
            defaults={
                'every': item.every,
                'period': item.period
            }
        )
        print(novo, obj)

    # CrontabSchedule
    DjCeleryCrontabSchedule = apps.get_model("djcelery", "DjCeleryCrontabSchedule")
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")

    for item in DjCeleryCrontabSchedule.objects.order_by('id'):
        obj, novo = CrontabSchedule.objects.get_or_create(
            id=item.id,
            defaults={
                'minute': item.minute,
                'hour': item.hour,
                'day_of_week': item.day_of_week,
                'day_of_month': item.day_of_month,
                'month_of_year': item.month_of_year,
                'timezone': settings.TIME_ZONE
            }
        )
        print(novo, obj)

    # PeriodicTask
    # TODO: converter para apps.get_model (AttributeError: 'DjCeleryPeriodicTask' object has no attribute 'interval')
    from djcelery.models import DjCeleryPeriodicTask
    from django_celery_beat.models import PeriodicTask

    for item in DjCeleryPeriodicTask.objects.order_by('id'):
        print(item)
        obj, novo = PeriodicTask.objects.get_or_create(
            id=item.id,
            defaults={
                'name': item.name,
                'task': item.task,
                'interval_id': item.interval_id,
                'crontab_id': item.crontab_id,
                'solar_id': None,
                'clocked_id': None,
                'args': item.args,
                'kwargs': item.kwargs,
                'queue': item.queue,
                'exchange': item.exchange,
                'routing_key': item.routing_key,
                'headers': '{}',
                'priority': None,
                'expires': item.expires,
                'expire_seconds': None,
                'one_off': False,
                'start_time': None,
                'enabled': item.enabled,
                'last_run_at': item.last_run_at,
                'total_run_count': item.total_run_count,
                'date_changed': item.date_changed,
                'description': item.description,
            }
        )
        print(novo, obj)


def reverse_migrate_data(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('djcelery', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            code=migrate_data,
            reverse_code=reverse_migrate_data
        ),
        migrations.RunSQL(
            sql='ALTER SEQUENCE django_celery_beat_crontabschedule_id_seq RESTART WITH 101;',
            reverse_sql=''
        ),
    ]
